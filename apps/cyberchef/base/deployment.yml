apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: deployment
    app.kubernetes.io/name: cyberchef
    app.kubernetes.io/part-of: cyberchef
  name: cyberchef
spec:
  replicas: 2
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: pod
      app.kubernetes.io/name: cyberchef
      app.kubernetes.io/part-of: cyberchef
  template:
    metadata:
      labels:
        app.kubernetes.io/component: pod
        app.kubernetes.io/name: cyberchef
        app.kubernetes.io/part-of: cyberchef
    spec:
      automountServiceAccountToken: false
      containers:
      - image: registry.wcooke.me:5000/cyberchef:10.19.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        name: cyberchef
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 20
        resources:
          limits:
            cpu: 100m
            memory: 32M
          requests:
            cpu: 10m
            memory: 16M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: temp
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 101
      volumes:
      - emptyDir:
          sizeLimit: 1Mi
        name: temp
